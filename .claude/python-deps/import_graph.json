{
  "scripts.verify-all-systems": {
    "file": "scripts/verify-all-systems.py",
    "imports": {
      "imports": [
        "json",
        "os",
        "sys",
        "subprocess"
      ],
      "from_imports": [
        "pathlib.Path"
      ],
      "local_imports": [],
      "type_imports": []
    },
    "exports": {
      "classes": [
        "Colors"
      ],
      "functions": [
        "check",
        "section",
        "verify_commands",
        "verify_hooks",
        "verify_aliases",
        "verify_personas",
        "verify_field_registry",
        "verify_config_files",
        "verify_documentation",
        "verify_prd_flow",
        "verify_github_integration",
        "verify_security_features",
        "main"
      ],
      "variables": [
        "GREEN",
        "RED",
        "YELLOW",
        "BLUE",
        "ENDC",
        "BOLD",
        "commands_dir",
        "expected_commands",
        "found",
        "missing",
        "hooks_dir",
        "pre_hooks",
        "post_hooks",
        "pre_dir",
        "pre_found",
        "post_dir",
        "post_found",
        "aliases_file",
        "critical_aliases",
        "all_good",
        "personas_file",
        "expected_personas",
        "personas",
        "found",
        "registry_dir",
        "core_files",
        "compliance_files",
        "vertical_files",
        "all_good",
        "configs",
        "all_good",
        "root_docs",
        "setup_docs",
        "flow_components",
        "all_good",
        "state_save",
        "fw",
        "pii_hook",
        "security_libs",
        "results",
        "passed",
        "total",
        "severity",
        "hook_path",
        "hook_path",
        "aliases",
        "data",
        "full_path",
        "path",
        "status",
        "all_good",
        "all_good",
        "all_good",
        "all_good",
        "content",
        "content",
        "all_good"
      ],
      "type_aliases": []
    },
    "imported_by": []
  },
  "scripts.test-workflow": {
    "file": "scripts/test-workflow.py",
    "imports": {
      "imports": [
        "json",
        "os",
        "sys"
      ],
      "from_imports": [
        "pathlib.Path"
      ],
      "local_imports": [],
      "type_imports": []
    },
    "exports": {
      "classes": [],
      "functions": [
        "test_workflow"
      ],
      "variables": [
        "tests_passed",
        "tests_failed",
        "project_prd_path",
        "gi_command",
        "fw_command",
        "prd_cmd",
        "gt_cmd",
        "pt_cmd",
        "state_save",
        "design_check",
        "aliases_file",
        "orch_cmd",
        "personas",
        "field_registry",
        "pii_hook",
        "critical_aliases",
        "missing",
        "aliases"
      ],
      "type_aliases": []
    },
    "imported_by": []
  },
  "src.agents.data_analyst": {
    "file": "src/agents/data_analyst.py",
    "imports": {
      "imports": [
        "duckdb",
        "pandas"
      ],
      "from_imports": [
        "typing.Any",
        "typing.Dict",
        "typing.List",
        "typing.Optional",
        "typing.Union",
        "pydantic.BaseModel",
        "pydantic.Field",
        "src.agents.base.AgentRole",
        "src.agents.base.BaseAgent",
        "src.agents.base.AgentResponse"
      ],
      "local_imports": [],
      "type_imports": []
    },
    "exports": {
      "classes": [
        "DataAnalysisRequest",
        "DataInsight",
        "DataAnalysisResponse",
        "DataQualityReport",
        "DataAnalystAgent"
      ],
      "functions": [
        "analyze_dataframe",
        "profile_data",
        "execute_sql",
        "find_correlations",
        "suggest_analysis"
      ],
      "variables": [
        "question",
        "sql_query",
        "visualization_type",
        "groupby",
        "aggregations",
        "insight",
        "importance",
        "evidence",
        "visualization",
        "summary",
        "insights",
        "statistics",
        "visualizations",
        "recommendations",
        "confidence",
        "sql_used",
        "total_rows",
        "total_columns",
        "missing_values",
        "duplicate_rows",
        "data_types",
        "quality_score",
        "issues",
        "recommendations",
        "role",
        "name",
        "description",
        "tools",
        "context",
        "prompt",
        "response",
        "total_rows",
        "total_columns",
        "missing_values",
        "duplicate_rows",
        "data_types",
        "total_cells",
        "missing_cells",
        "quality_score",
        "issues",
        "prompt",
        "recommendations_response",
        "numeric_df",
        "suggestions_prompt",
        "response",
        "sql_result",
        "conn",
        "result",
        "correlations",
        "correlations",
        "correlations",
        "corr_matrix",
        "upper_triangle",
        "strong_corrs",
        "sql_context",
        "response"
      ],
      "type_aliases": []
    },
    "imported_by": [
      "src.agents.base",
      "src.cli.main"
    ]
  },
  "src.agents.base": {
    "file": "src/agents/base.py",
    "imports": {
      "imports": [
        "instructor",
        "json",
        "json"
      ],
      "from_imports": [
        "__future__.annotations",
        "enum.Enum",
        "typing.Any",
        "typing.Dict",
        "typing.List",
        "typing.Optional",
        "typing.Type",
        "typing.TypeVar",
        "openai.AsyncOpenAI",
        "openai.OpenAI",
        "pydantic.BaseModel",
        "pydantic.Field",
        "pydantic.field_validator",
        "loguru.logger",
        "tenacity.retry",
        "tenacity.stop_after_attempt",
        "tenacity.wait_exponential"
      ],
      "local_imports": [],
      "type_imports": []
    },
    "exports": {
      "classes": [
        "AgentRole",
        "AgentMemory",
        "AgentConfig",
        "BaseAgent",
        "AgentResponse",
        "AgentError"
      ],
      "functions": [
        "add_interaction",
        "update_context",
        "store_knowledge",
        "think",
        "think_async",
        "use_tool",
        "reset_memory",
        "save_memory",
        "load_memory",
        "validate_confidence"
      ],
      "variables": [
        "T",
        "DATA_ANALYST",
        "PIPELINE_BUILDER",
        "API_DEVELOPER",
        "TEST_ENGINEER",
        "SECURITY_AUDITOR",
        "DOCUMENTATION_WRITER",
        "CODE_REVIEWER",
        "DEVOPS_ENGINEER",
        "short_term",
        "long_term",
        "context",
        "model",
        "temperature",
        "max_retries",
        "timeout",
        "tools_enabled",
        "memory_enabled",
        "streaming",
        "role",
        "name",
        "description",
        "memory",
        "config",
        "tools",
        "model_config",
        "content",
        "confidence",
        "reasoning",
        "next_steps",
        "artifacts",
        "error",
        "error_type",
        "suggestion",
        "retry_after",
        "messages",
        "response",
        "messages",
        "response",
        "system_prompt",
        "messages",
        "user_content",
        "prompt",
        "user_content",
        "data"
      ],
      "type_aliases": []
    },
    "imported_by": [
      "scripts.verify-all-systems",
      "src.agents.data_analyst",
      "src.cli.main",
      "src.orchestration.__init__",
      ".claude.utils.suggestion_engine",
      ".claude.scripts.generate-docs",
      ".claude.scripts.nightly-update",
      ".claude.hooks.notification.01-precompact-handler",
      ".claude.hooks.notification.smart-suggest",
      ".claude.hooks.notification.team-aware",
      ".claude.hooks.pre-tool-use.08-evidence-language",
      ".claude.hooks.pre-tool-use.11-truth-enforcer",
      ".claude.hooks.pre-tool-use.02-design-check",
      ".claude.hooks.pre-tool-use.01-collab-sync",
      ".claude.hooks.pre-tool-use.15-implementation-guide",
      ".claude.hooks.pre-tool-use.13-import-validator",
      ".claude.hooks.pre-tool-use.16-python-creation-guard",
      ".claude.hooks.pre-tool-use.09-auto-persona",
      ".claude.hooks.pre-tool-use.03-conflict-check",
      ".claude.hooks.pre-tool-use.01-dangerous-commands",
      ".claude.hooks.pre-tool-use.16-tcpa-compliance",
      ".claude.hooks.pre-tool-use.12-deletion-guard",
      ".claude.hooks.stop.knowledge-share",
      ".claude.hooks.stop.handoff-prep",
      ".claude.hooks.stop.save-state",
      ".claude.hooks.utils.debug-helper",
      ".claude.hooks.post-tool-use.02-metrics",
      ".claude.hooks.post-tool-use.03-auto-orchestrate",
      ".claude.hooks.post-tool-use.04-research-capture",
      ".claude.hooks.post-tool-use.03-pattern-learning",
      ".claude.hooks.post-tool-use.04-python-response-capture",
      ".claude.hooks.post-tool-use.01-state-save"
    ]
  },
  "src.cli.main": {
    "file": "src/cli/main.py",
    "imports": {
      "imports": [
        "typer",
        "pandas",
        "json"
      ],
      "from_imports": [
        "pathlib.Path",
        "typing.Optional",
        "typing.List",
        "rich.console.Console",
        "rich.panel.Panel",
        "rich.progress.Progress",
        "rich.progress.SpinnerColumn",
        "rich.progress.TextColumn",
        "rich.table.Table",
        "rich.syntax.Syntax",
        "src.agents.base.AgentRole",
        "src.agents.data_analyst.DataAnalystAgent",
        "src.agents.data_analyst.DataAnalysisRequest",
        "src.orchestration.Orchestrator",
        "src.orchestration.TaskAnalyzer",
        "src.orchestration.OrchestrationStrategy",
        "src.agents.base.AgentResponse"
      ],
      "local_imports": [],
      "type_imports": []
    },
    "exports": {
      "classes": [],
      "functions": [
        "version",
        "analyze_orchestration",
        "start_orchestration",
        "orchestration_status",
        "list_agents",
        "agent_chat",
        "analyze_data",
        "suggest_analysis",
        "list_pipelines",
        "run_pipeline"
      ],
      "variables": [
        "app",
        "console",
        "agent_app",
        "data_app",
        "pipeline_app",
        "orchestration_app",
        "content",
        "feature_name",
        "table",
        "table",
        "agent",
        "agent",
        "analyzer",
        "tasks",
        "orchestrator",
        "orch_strategy",
        "plan",
        "agent",
        "memory_path",
        "request",
        "response",
        "output_data",
        "suggestions",
        "user_input",
        "quality_report",
        "importance_color",
        "df",
        "orch_strategy",
        "response",
        "df",
        "df",
        "df"
      ],
      "type_aliases": []
    },
    "imported_by": [
      "scripts.verify-all-systems",
      "scripts.test-workflow",
      "src.orchestration.__init__",
      ".claude.utils.suggestion_engine",
      ".claude.scripts.health-check",
      ".claude.scripts.generate-docs",
      ".claude.scripts.test-v240-hooks",
      ".claude.scripts.test-hooks-advanced",
      ".claude.scripts.nightly-update",
      ".claude.hooks.sub-agent-stop.coordinate",
      ".claude.hooks.sub-agent-stop.01-track-completion",
      ".claude.hooks.notification.02-pr-feedback-monitor",
      ".claude.hooks.notification.01-precompact-handler",
      ".claude.hooks.notification.smart-suggest",
      ".claude.hooks.notification.team-aware",
      ".claude.hooks.pre-tool-use.08-evidence-language",
      ".claude.hooks.pre-tool-use.17-python-dependency-tracker",
      ".claude.hooks.pre-tool-use.07-pii-protection",
      ".claude.hooks.pre-tool-use.11-truth-enforcer",
      ".claude.hooks.pre-tool-use.02-design-check",
      ".claude.hooks.pre-tool-use.01-collab-sync",
      ".claude.hooks.pre-tool-use.15-implementation-guide",
      ".claude.hooks.pre-tool-use.04-actually-works",
      ".claude.hooks.pre-tool-use.14-prd-clarity",
      ".claude.hooks.pre-tool-use.08-async-patterns",
      ".claude.hooks.pre-tool-use.13-import-validator",
      ".claude.hooks.pre-tool-use.05-code-quality",
      ".claude.hooks.pre-tool-use.16-python-creation-guard",
      ".claude.hooks.pre-tool-use.09-auto-persona",
      ".claude.hooks.pre-tool-use.00-auto-approve-safe-ops",
      ".claude.hooks.pre-tool-use.03-conflict-check",
      ".claude.hooks.pre-tool-use.06-biome-lint",
      ".claude.hooks.pre-tool-use.10-hydration-guard",
      ".claude.hooks.pre-tool-use.01-dangerous-commands",
      ".claude.hooks.pre-tool-use.16-tcpa-compliance",
      ".claude.hooks.pre-tool-use.12-deletion-guard",
      ".claude.hooks.stop.knowledge-share",
      ".claude.hooks.stop.handoff-prep",
      ".claude.hooks.stop.01-save-transcript",
      ".claude.hooks.stop.save-state",
      ".claude.hooks.utils.debug-helper",
      ".claude.hooks.utils.performance",
      ".claude.hooks.post-tool-use.02-metrics",
      ".claude.hooks.post-tool-use.03-auto-orchestrate",
      ".claude.hooks.post-tool-use.01-action-logger",
      ".claude.hooks.post-tool-use.03-pattern-learning",
      ".claude.hooks.post-tool-use.03-command-logger",
      ".claude.hooks.post-tool-use.05-python-import-updater",
      ".claude.hooks.post-tool-use.04-python-response-capture",
      ".claude.hooks.post-tool-use.01-state-save"
    ]
  },
  "src.orchestration.__init__": {
    "file": "src/orchestration/__init__.py",
    "imports": {
      "imports": [
        "re"
      ],
      "from_imports": [
        "enum.Enum",
        "typing.Dict",
        "typing.List",
        "typing.Optional",
        "typing.Set",
        "pydantic.BaseModel",
        "pydantic.Field",
        "collections.defaultdict",
        "pathlib.Path",
        "src.agents.base.AgentRole"
      ],
      "local_imports": [],
      "type_imports": []
    },
    "exports": {
      "classes": [
        "OrchestrationStrategy",
        "TaskDomain",
        "Task",
        "AgentAssignment",
        "OrchestrationPlan",
        "TaskAnalyzer",
        "Orchestrator"
      ],
      "functions": [
        "analyze_task_domains",
        "extract_tasks_from_markdown",
        "determine_strategy",
        "create_orchestration_plan",
        "find_path_length"
      ],
      "variables": [
        "FEATURE_DEVELOPMENT",
        "BUG_INVESTIGATION",
        "PERFORMANCE_OPTIMIZATION",
        "SECURITY_AUDIT",
        "CODE_QUALITY",
        "DEPLOYMENT",
        "DATA_PIPELINE",
        "BACKEND",
        "FRONTEND",
        "DATA",
        "AGENT",
        "SECURITY",
        "TESTING",
        "PERFORMANCE",
        "DEVOPS",
        "REFACTOR",
        "id",
        "description",
        "domains",
        "complexity",
        "estimated_time",
        "dependencies",
        "enables",
        "agent_role",
        "agent_id",
        "tasks",
        "focus",
        "outputs",
        "status",
        "current_task",
        "completed_tasks",
        "feature_name",
        "strategy",
        "total_tasks",
        "agent_assignments",
        "phases",
        "estimated_sequential_time",
        "estimated_parallel_time",
        "time_savings_percent",
        "critical_path",
        "DOMAIN_PATTERNS",
        "domains",
        "tasks",
        "task_pattern",
        "complexity_pattern",
        "dependencies_pattern",
        "enables_pattern",
        "domain_counts",
        "agent_roles",
        "assignments",
        "phases",
        "sequential_time",
        "parallel_time",
        "critical_path",
        "domain_agent_map",
        "assignments",
        "task_map",
        "phases",
        "completed",
        "task_map",
        "total_time",
        "task_map",
        "memo",
        "critical_tasks",
        "task_id",
        "description",
        "domains_str",
        "domains",
        "complexity",
        "estimated_time",
        "complexity_match",
        "dependencies",
        "deps_match",
        "enables",
        "enables_match",
        "strategy",
        "agent_id",
        "assigned",
        "phase_tasks",
        "phase_time",
        "task",
        "max_dep_length",
        "domain_name",
        "complexity",
        "estimated_time",
        "dependencies",
        "enables",
        "preferred_agent",
        "agent_id",
        "agent_time",
        "phase_time",
        "max_dep_length",
        "agent_id",
        "assigned"
      ],
      "type_aliases": []
    },
    "imported_by": [
      "src.agents.base",
      ".claude.utils.suggestion_engine",
      ".claude.scripts.generate-docs",
      ".claude.scripts.test-hooks-advanced",
      ".claude.scripts.nightly-update",
      ".claude.hooks.pre-tool-use.11-truth-enforcer",
      ".claude.hooks.pre-tool-use.15-implementation-guide",
      ".claude.hooks.utils.performance"
    ]
  },
  ".claude.utils.__init__": {
    "file": ".claude/utils/__init__.py",
    "imports": {
      "imports": [],
      "from_imports": [],
      "local_imports": [
        {
          "module": "suggestion_engine",
          "names": [
            "SuggestionEngine"
          ],
          "level": 1
        }
      ],
      "type_imports": []
    },
    "exports": {
      "classes": [],
      "functions": [],
      "variables": [],
      "type_aliases": []
    },
    "imported_by": [
      "src.agents.base",
      "src.orchestration.__init__",
      ".claude.utils.suggestion_engine",
      ".claude.scripts.generate-docs",
      ".claude.scripts.test-hooks-advanced",
      ".claude.scripts.nightly-update",
      ".claude.hooks.pre-tool-use.11-truth-enforcer",
      ".claude.hooks.pre-tool-use.15-implementation-guide",
      ".claude.hooks.utils.performance"
    ]
  },
  ".claude.utils.suggestion_engine": {
    "file": ".claude/utils/suggestion_engine.py",
    "imports": {
      "imports": [
        "json",
        "re",
        "os"
      ],
      "from_imports": [
        "pathlib.Path",
        "datetime.datetime",
        "collections.Counter"
      ],
      "local_imports": [],
      "type_imports": []
    },
    "exports": {
      "classes": [
        "SuggestionEngine"
      ],
      "functions": [
        "find_violations",
        "format_violation_message",
        "track_violation",
        "get_common_mistakes",
        "get_category_stats"
      ],
      "variables": [
        "engine",
        "test_content",
        "violations",
        "violations",
        "violations",
        "violations",
        "violation_counts",
        "common",
        "category_counts",
        "suggestion",
        "matches",
        "violations",
        "violations",
        "start",
        "end",
        "context",
        "violations",
        "violations",
        "suggestion"
      ],
      "type_aliases": []
    },
    "imported_by": [
      ".claude.utils.__init__",
      ".claude.hooks.pre-tool-use.02-design-check",
      ".claude.hooks.pre-tool-use.15-implementation-guide"
    ]
  },
  ".claude.scripts.health-check": {
    "file": ".claude/scripts/health-check.py",
    "imports": {
      "imports": [
        "json",
        "subprocess",
        "sys"
      ],
      "from_imports": [
        "pathlib.Path",
        "datetime.datetime"
      ],
      "local_imports": [],
      "type_imports": []
    },
    "exports": {
      "classes": [],
      "functions": [
        "check_python_version",
        "check_required_commands",
        "check_directory_structure",
        "check_hook_files",
        "check_configuration",
        "generate_report",
        "main"
      ],
      "variables": [
        "version",
        "commands",
        "results",
        "dirs",
        "results",
        "hook_dir",
        "expected_hooks",
        "results",
        "configs",
        "results",
        "report",
        "total",
        "passed",
        "warnings",
        "failed",
        "all_checks",
        "report",
        "report_path",
        "failed",
        "warnings",
        "exists",
        "path",
        "status",
        "details",
        "hook_path",
        "exists",
        "executable",
        "status",
        "details",
        "status",
        "details",
        "status",
        "details",
        "data",
        "has_hooks",
        "status",
        "details",
        "status",
        "details",
        "status",
        "details",
        "status",
        "details"
      ],
      "type_aliases": []
    },
    "imported_by": []
  },
  ".claude.scripts.generate-docs": {
    "file": ".claude/scripts/generate-docs.py",
    "imports": {
      "imports": [
        "json",
        "os",
        "ast"
      ],
      "from_imports": [
        "pathlib.Path",
        "datetime.datetime"
      ],
      "local_imports": [],
      "type_imports": []
    },
    "exports": {
      "classes": [
        "DocGenerator"
      ],
      "functions": [
        "generate_all_docs",
        "generate_command_reference",
        "generate_hook_documentation",
        "generate_config_guide",
        "generate_team_guide"
      ],
      "variables": [
        "generator",
        "commands_dir",
        "aliases",
        "aliases_file",
        "doc_content",
        "categories",
        "chains_file",
        "hooks_dir",
        "doc_content",
        "hook_types",
        "doc_content",
        "config_files",
        "doc_content",
        "cmd_name",
        "hook_dir",
        "file_path",
        "aliases",
        "category",
        "chains_data",
        "category",
        "cmd_aliases",
        "content",
        "category",
        "first_line",
        "content",
        "tree",
        "docstring",
        "category",
        "category"
      ],
      "type_aliases": []
    },
    "imported_by": [
      "scripts.verify-all-systems"
    ]
  },
  ".claude.scripts.test-v240-hooks": {
    "file": ".claude/scripts/test-v240-hooks.py",
    "imports": {
      "imports": [
        "json",
        "subprocess",
        "sys"
      ],
      "from_imports": [
        "pathlib.Path"
      ],
      "local_imports": [],
      "type_imports": []
    },
    "exports": {
      "classes": [],
      "functions": [
        "test_creation_guard",
        "test_dependency_tracker",
        "test_response_capture",
        "main"
      ],
      "variables": [
        "test_content",
        "hook_input",
        "result",
        "hook_input",
        "result",
        "ai_response",
        "hook_input",
        "result",
        "tests",
        "results",
        "all_passed",
        "output",
        "output",
        "output",
        "status",
        "success"
      ],
      "type_aliases": []
    },
    "imported_by": []
  },
  ".claude.scripts.test-hooks-advanced": {
    "file": ".claude/scripts/test-hooks-advanced.py",
    "imports": {
      "imports": [
        "json",
        "subprocess",
        "sys",
        "tempfile",
        "shutil",
        "os",
        "os"
      ],
      "from_imports": [
        "pathlib.Path"
      ],
      "local_imports": [],
      "type_imports": []
    },
    "exports": {
      "classes": [
        "HookTester"
      ],
      "functions": [
        "test_hook",
        "run_tests",
        "test_design_enforcement",
        "test_actually_works",
        "test_code_quality",
        "test_collab_sync",
        "generate_report"
      ],
      "variables": [
        "tester",
        "hook_path",
        "test_input",
        "result",
        "result",
        "result",
        "hook_path",
        "test_input",
        "result",
        "result",
        "hook_path",
        "test_input",
        "result",
        "result",
        "hook_path",
        "passed",
        "failed",
        "errors",
        "report_path",
        "result",
        "original_dir",
        "status_emoji",
        "output",
        "test_input",
        "result"
      ],
      "type_aliases": []
    },
    "imported_by": []
  },
  ".claude.scripts.nightly-update": {
    "file": ".claude/scripts/nightly-update.py",
    "imports": {
      "imports": [
        "os",
        "git",
        "datetime",
        "json"
      ],
      "from_imports": [
        "pathlib.Path"
      ],
      "local_imports": [],
      "type_imports": []
    },
    "exports": {
      "classes": [
        "ContextUpdater"
      ],
      "functions": [
        "analyze_recent_changes",
        "analyze_file_change",
        "apply_change",
        "update_claude_md",
        "generate_summary"
      ],
      "variables": [
        "updater",
        "updates",
        "since",
        "commits",
        "backup_path",
        "summary",
        "component_name",
        "content",
        "content",
        "content"
      ],
      "type_aliases": []
    },
    "imported_by": []
  },
  ".claude.hooks.sub-agent-stop.coordinate": {
    "file": ".claude/hooks/sub-agent-stop/coordinate.py",
    "imports": {
      "imports": [
        "json",
        "sys",
        "os"
      ],
      "from_imports": [
        "datetime.datetime",
        "pathlib.Path"
      ],
      "local_imports": [],
      "type_imports": []
    },
    "exports": {
      "classes": [],
      "functions": [
        "load_orchestration_state",
        "update_agent_progress",
        "check_dependencies",
        "send_handoff_message",
        "generate_status_report",
        "handle_task_completion",
        "prevent_conflicts",
        "main"
      ],
      "variables": [
        "state_file",
        "progress_dir",
        "progress_file",
        "progress",
        "task_deps",
        "completed_tasks",
        "progress_dir",
        "messages_file",
        "messages",
        "handoff",
        "orchestration_state",
        "report",
        "agents",
        "progress_dir",
        "messages_file",
        "orchestration_state",
        "agent_info",
        "remaining_tasks",
        "next_task",
        "handoffs",
        "orchestration_state",
        "ownership",
        "input_data",
        "agent_id",
        "event_type",
        "total_tasks",
        "completed",
        "current_task",
        "progress_file",
        "percentage",
        "bar_length",
        "filled",
        "bar",
        "target_agent",
        "task_id",
        "artifacts",
        "report",
        "messages",
        "messages",
        "recent",
        "prefix",
        "file_path",
        "allowed",
        "agent_progress",
        "progress",
        "current_task",
        "report"
      ],
      "type_aliases": []
    },
    "imported_by": []
  },
  ".claude.hooks.sub-agent-stop.01-track-completion": {
    "file": ".claude/hooks/sub-agent-stop/01-track-completion.py",
    "imports": {
      "imports": [
        "json",
        "sys"
      ],
      "from_imports": [
        "datetime.datetime",
        "pathlib.Path"
      ],
      "local_imports": [],
      "type_imports": []
    },
    "exports": {
      "classes": [],
      "functions": [
        "main"
      ],
      "variables": [
        "input_data",
        "log_dir",
        "sub_agent_log",
        "log_entry"
      ],
      "type_aliases": []
    },
    "imported_by": []
  },
  ".claude.hooks.notification.02-pr-feedback-monitor": {
    "file": ".claude/hooks/notification/02-pr-feedback-monitor.py",
    "imports": {
      "imports": [
        "json",
        "sys",
        "subprocess"
      ],
      "from_imports": [
        "pathlib.Path",
        "datetime.datetime"
      ],
      "local_imports": [],
      "type_imports": []
    },
    "exports": {
      "classes": [],
      "functions": [
        "get_current_pr",
        "check_coderabbit_review",
        "parse_coderabbit_comment",
        "main"
      ],
      "variables": [
        "issues",
        "pr_number",
        "feedback",
        "branch",
        "result",
        "prs",
        "result",
        "comments",
        "notified_file",
        "total_issues"
      ],
      "type_aliases": []
    },
    "imported_by": []
  },
  ".claude.hooks.notification.01-precompact-handler": {
    "file": ".claude/hooks/notification/01-precompact-handler.py",
    "imports": {
      "imports": [
        "json",
        "sys",
        "os",
        "subprocess"
      ],
      "from_imports": [
        "pathlib.Path",
        "datetime.datetime",
        "datetime.timedelta"
      ],
      "local_imports": [],
      "type_imports": []
    },
    "exports": {
      "classes": [],
      "functions": [
        "main"
      ],
      "variables": [
        "input_data",
        "notification",
        "critical_files",
        "project_docs",
        "task_files",
        "research_base",
        "context_dir",
        "context_file",
        "context_data",
        "current_task_file",
        "log_dir",
        "log_file",
        "log_entry",
        "project_prd",
        "features_dir",
        "week_ago",
        "feature_prds",
        "branch",
        "cat_path",
        "feature",
        "feature",
        "feature_research",
        "recent_research",
        "research_files",
        "most_recent"
      ],
      "type_aliases": []
    },
    "imported_by": []
  },
  ".claude.hooks.notification.smart-suggest": {
    "file": ".claude/hooks/notification/smart-suggest.py",
    "imports": {
      "imports": [
        "json",
        "sys",
        "subprocess"
      ],
      "from_imports": [
        "pathlib.Path",
        "datetime.datetime"
      ],
      "local_imports": [],
      "type_imports": []
    },
    "exports": {
      "classes": [],
      "functions": [
        "get_current_context",
        "get_current_branch",
        "get_modified_files",
        "get_last_command",
        "count_todos",
        "infer_work_type",
        "infer_work_stage",
        "generate_suggestions",
        "extract_issue_number",
        "format_suggestion_message",
        "main"
      ],
      "variables": [
        "context",
        "has_components",
        "has_api",
        "has_tests",
        "has_docs",
        "modified_count",
        "suggestions",
        "parts",
        "message",
        "input_data",
        "context",
        "suggestions",
        "response",
        "result",
        "result",
        "files",
        "result",
        "issue_num"
      ],
      "type_aliases": []
    },
    "imported_by": [
      ".claude.scripts.health-check"
    ]
  },
  ".claude.hooks.notification.team-aware": {
    "file": ".claude/hooks/notification/team-aware.py",
    "imports": {
      "imports": [
        "json",
        "sys"
      ],
      "from_imports": [
        "pathlib.Path",
        "datetime.datetime",
        "datetime.timedelta"
      ],
      "local_imports": [],
      "type_imports": []
    },
    "exports": {
      "classes": [],
      "functions": [
        "get_team_registry",
        "get_current_user",
        "analyze_team_activity",
        "is_recent_activity",
        "format_time_ago",
        "infer_focus_area",
        "generate_suggestions",
        "overlaps_with_context",
        "format_team_status",
        "main"
      ],
      "variables": [
        "registry_path",
        "config_path",
        "current_user",
        "team_activity",
        "areas",
        "suggestions",
        "warnings",
        "team_focus_areas",
        "current_area",
        "status",
        "input_data",
        "notification_type",
        "current_context",
        "registry",
        "team_activity",
        "response",
        "then",
        "now",
        "then",
        "now",
        "delta",
        "last_activity",
        "minutes",
        "hours"
      ],
      "type_aliases": []
    },
    "imported_by": [
      ".claude.scripts.health-check"
    ]
  },
  ".claude.hooks.pre-tool-use.08-evidence-language": {
    "file": ".claude/hooks/pre-tool-use/08-evidence-language.py",
    "imports": {
      "imports": [
        "json",
        "sys",
        "re"
      ],
      "from_imports": [],
      "local_imports": [],
      "type_imports": []
    },
    "exports": {
      "classes": [],
      "functions": [
        "find_unsupported_claims",
        "suggest_evidence_based_alternative",
        "format_evidence_message",
        "main"
      ],
      "variables": [
        "CLAIMS_REQUIRING_EVIDENCE",
        "EVIDENCE_PATTERNS",
        "issues",
        "lines",
        "alternatives",
        "message",
        "input_data",
        "relevant_files",
        "file_path",
        "content",
        "issues",
        "matches",
        "has_evidence",
        "has_evidence",
        "has_evidence"
      ],
      "type_aliases": []
    },
    "imported_by": [
      "scripts.verify-all-systems"
    ]
  },
  ".claude.hooks.pre-tool-use.17-python-dependency-tracker": {
    "file": ".claude/hooks/pre-tool-use/17-python-dependency-tracker.py",
    "imports": {
      "imports": [
        "json",
        "sys",
        "os",
        "ast",
        "re",
        "subprocess"
      ],
      "from_imports": [
        "pathlib.Path",
        "typing.Dict",
        "typing.List",
        "typing.Set",
        "typing.Tuple",
        "typing.Optional"
      ],
      "local_imports": [],
      "type_imports": []
    },
    "exports": {
      "classes": [],
      "functions": [
        "get_project_root",
        "find_python_files",
        "extract_imports",
        "extract_exports",
        "build_dependency_graph",
        "detect_breaking_changes",
        "check_module_dependencies",
        "format_dependency_alert",
        "load_dependency_cache",
        "save_dependency_cache",
        "main"
      ],
      "variables": [
        "python_files",
        "ignore_dirs",
        "imports",
        "exports",
        "graph",
        "python_files",
        "all_exports",
        "changes",
        "module_info",
        "imported_by",
        "msg",
        "cache_file",
        "cache_dir",
        "cache_file",
        "input_data",
        "file_path",
        "graph",
        "module_path",
        "deps",
        "changes",
        "alert",
        "content",
        "type_checking_match",
        "module_path",
        "exports",
        "module_path",
        "imports",
        "imported_by",
        "module_name",
        "old_tree",
        "new_tree",
        "old_defs",
        "new_defs",
        "root",
        "graph",
        "changes",
        "response",
        "tree",
        "type_section",
        "type_imports_found",
        "tree",
        "other_content",
        "content",
        "import_lines",
        "other_module",
        "new_node",
        "module_path",
        "module",
        "level",
        "old_args",
        "new_args"
      ],
      "type_aliases": []
    },
    "imported_by": [
      ".claude.scripts.test-v240-hooks"
    ]
  },
  ".claude.hooks.pre-tool-use.07-pii-protection": {
    "file": ".claude/hooks/pre-tool-use/07-pii-protection.py",
    "imports": {
      "imports": [
        "json",
        "sys",
        "re"
      ],
      "from_imports": [
        "pathlib.Path"
      ],
      "local_imports": [],
      "type_imports": []
    },
    "exports": {
      "classes": [],
      "functions": [
        "get_pii_patterns",
        "check_file_content",
        "suggest_fixes",
        "format_violation_message",
        "main"
      ],
      "variables": [
        "violations",
        "patterns",
        "lines",
        "fixes",
        "message",
        "by_type",
        "input_data",
        "file_path",
        "content",
        "violations",
        "type_names",
        "fixes",
        "message",
        "critical_types",
        "has_critical"
      ],
      "type_aliases": []
    },
    "imported_by": [
      "scripts.verify-all-systems",
      "scripts.test-workflow"
    ]
  },
  ".claude.hooks.pre-tool-use.11-truth-enforcer": {
    "file": ".claude/hooks/pre-tool-use/11-truth-enforcer.py",
    "imports": {
      "imports": [
        "json",
        "sys",
        "re",
        "subprocess"
      ],
      "from_imports": [
        "pathlib.Path",
        "datetime.datetime",
        "datetime.timedelta"
      ],
      "local_imports": [],
      "type_imports": []
    },
    "exports": {
      "classes": [
        "ProjectTruthExtractor"
      ],
      "functions": [
        "is_intentional_change",
        "check_truth_violations",
        "main",
        "extract_all",
        "extract_project_info",
        "extract_api_routes",
        "extract_components",
        "extract_env_vars",
        "extract_database_schema",
        "extract_type_definitions"
      ],
      "variables": [
        "override_file",
        "violations",
        "operation",
        "path",
        "input_data",
        "tool_use",
        "extractor",
        "truths",
        "violations",
        "work_state",
        "result",
        "last_commit",
        "old_content",
        "new_content",
        "prd_files",
        "api_dir",
        "components_dir",
        "env_file",
        "prisma_file",
        "schema_files",
        "types_dir",
        "warning_msg",
        "error_msg",
        "high_severity",
        "pkg",
        "content",
        "name_match",
        "content",
        "content",
        "models",
        "content",
        "tables",
        "overrides",
        "state",
        "current_task",
        "refactor_keywords",
        "emoji",
        "route_path",
        "route_path",
        "content",
        "methods",
        "content",
        "types",
        "override_time",
        "content",
        "comp_name",
        "props_match",
        "key",
        "prop_content",
        "variant_match"
      ],
      "type_aliases": []
    },
    "imported_by": []
  },
  ".claude.hooks.pre-tool-use.02-design-check": {
    "file": ".claude/hooks/pre-tool-use/02-design-check.py",
    "imports": {
      "imports": [
        "json",
        "sys",
        "os",
        "re"
      ],
      "from_imports": [
        "pathlib.Path",
        "utils.suggestion_engine.SuggestionEngine"
      ],
      "local_imports": [],
      "type_imports": []
    },
    "exports": {
      "classes": [],
      "functions": [
        "get_config",
        "is_component_file",
        "find_violations_legacy",
        "suggest_font_size_fix",
        "suggest_font_weight_fix",
        "suggest_spacing_fix",
        "format_violations_message_legacy",
        "main"
      ],
      "variables": [
        "USE_SUGGESTION_ENGINE",
        "config_path",
        "component_extensions",
        "ignore_paths",
        "violations",
        "design_rules",
        "forbidden_sizes",
        "forbidden_weights",
        "spacing_rules",
        "spacing_grid",
        "spacing_pattern",
        "mobile_rules",
        "min_touch_target",
        "touch_pattern",
        "size_map",
        "weight_map",
        "grid",
        "lower",
        "upper",
        "message",
        "input_data",
        "file_path",
        "config",
        "content",
        "violations",
        "USE_SUGGESTION_ENGINE",
        "value",
        "height",
        "engine",
        "violations",
        "message",
        "response",
        "message",
        "by_category",
        "common",
        "stats",
        "response",
        "design_config",
        "category",
        "fixed_content",
        "fixed_content"
      ],
      "type_aliases": []
    },
    "imported_by": [
      "scripts.verify-all-systems",
      "scripts.test-workflow",
      ".claude.scripts.health-check",
      ".claude.scripts.test-hooks-advanced",
      ".claude.hooks.pre-tool-use.15-implementation-guide"
    ]
  },
  ".claude.hooks.pre-tool-use.01-collab-sync": {
    "file": ".claude/hooks/pre-tool-use/01-collab-sync.py",
    "imports": {
      "imports": [
        "json",
        "sys",
        "subprocess",
        "os"
      ],
      "from_imports": [
        "datetime.datetime",
        "datetime.timedelta",
        "pathlib.Path"
      ],
      "local_imports": [],
      "type_imports": []
    },
    "exports": {
      "classes": [],
      "functions": [
        "get_config",
        "get_team_config",
        "run_git_command",
        "get_last_sync",
        "update_last_sync",
        "should_sync",
        "check_for_conflicts",
        "main"
      ],
      "variables": [
        "config_path",
        "team_config_path",
        "sync_file",
        "sync_file",
        "critical_files",
        "last_sync",
        "sync_interval",
        "result",
        "input_data",
        "config",
        "file_path",
        "conflict_info",
        "result",
        "last_author",
        "current_user",
        "fetch_result",
        "team_config",
        "current_user",
        "data",
        "time_result",
        "time_ago",
        "status_result",
        "pull_result"
      ],
      "type_aliases": []
    },
    "imported_by": [
      ".claude.scripts.health-check",
      ".claude.scripts.generate-docs",
      ".claude.scripts.test-hooks-advanced"
    ]
  },
  ".claude.hooks.pre-tool-use.15-implementation-guide": {
    "file": ".claude/hooks/pre-tool-use/15-implementation-guide.py",
    "imports": {
      "imports": [
        "json",
        "sys",
        "os",
        "re"
      ],
      "from_imports": [
        "pathlib.Path",
        "difflib.SequenceMatcher"
      ],
      "local_imports": [],
      "type_imports": []
    },
    "exports": {
      "classes": [
        "ImplementationGuide"
      ],
      "functions": [
        "format_analysis",
        "main",
        "analyze_implementation"
      ],
      "variables": [
        "message",
        "input_data",
        "guide",
        "analysis",
        "message",
        "tool",
        "path",
        "content",
        "analysis",
        "target",
        "target_name",
        "target_dir",
        "content_lower",
        "core_files",
        "updates_needed",
        "complexity_indicators",
        "has_high_warnings",
        "match",
        "filename",
        "match",
        "existing_updates",
        "response",
        "response",
        "base_name",
        "extension",
        "original",
        "number",
        "hook_dir",
        "similarity",
        "existing_numbers",
        "hook_match",
        "next_num"
      ],
      "type_aliases": []
    },
    "imported_by": []
  },
  ".claude.hooks.pre-tool-use.04-actually-works": {
    "file": ".claude/hooks/pre-tool-use/04-actually-works.py",
    "imports": {
      "imports": [
        "json",
        "sys",
        "re"
      ],
      "from_imports": [
        "pathlib.Path"
      ],
      "local_imports": [],
      "type_imports": []
    },
    "exports": {
      "classes": [],
      "functions": [
        "check_for_untested_claims",
        "check_for_test_evidence",
        "generate_testing_reminder",
        "main"
      ],
      "variables": [
        "content",
        "red_flags",
        "violations",
        "content",
        "test_indicators",
        "input_data",
        "violations",
        "has_test_evidence"
      ],
      "type_aliases": []
    },
    "imported_by": [
      "scripts.verify-all-systems",
      ".claude.scripts.health-check",
      ".claude.scripts.test-hooks-advanced"
    ]
  },
  ".claude.hooks.pre-tool-use.14-prd-clarity": {
    "file": ".claude/hooks/pre-tool-use/14-prd-clarity.py",
    "imports": {
      "imports": [
        "json",
        "re",
        "sys",
        "tempfile",
        "time",
        "traceback"
      ],
      "from_imports": [
        "pathlib.Path"
      ],
      "local_imports": [],
      "type_imports": []
    },
    "exports": {
      "classes": [],
      "functions": [
        "check_prd_clarity",
        "format_issue",
        "main"
      ],
      "variables": [
        "AMBIGUOUS_TERMS",
        "issues",
        "in_requirements",
        "in_acceptance",
        "in_background",
        "level_symbol",
        "symbol",
        "output",
        "output",
        "hook_input",
        "tool_use",
        "file_path",
        "config_path",
        "strict_mode",
        "error_count",
        "warning_count",
        "info_count",
        "req_issues",
        "other_issues",
        "lines",
        "in_requirements",
        "in_acceptance",
        "in_background",
        "matches",
        "file_path",
        "content",
        "issues",
        "issues",
        "in_requirements",
        "in_acceptance",
        "in_background",
        "issue",
        "tmp_path",
        "config",
        "strict_mode",
        "in_requirements",
        "in_acceptance",
        "in_background"
      ],
      "type_aliases": []
    },
    "imported_by": []
  },
  ".claude.hooks.pre-tool-use.08-async-patterns": {
    "file": ".claude/hooks/pre-tool-use/08-async-patterns.py",
    "imports": {
      "imports": [
        "json",
        "re",
        "sys"
      ],
      "from_imports": [],
      "local_imports": [],
      "type_imports": []
    },
    "exports": {
      "classes": [],
      "functions": [
        "check_async_patterns",
        "main"
      ],
      "variables": [
        "issues",
        "suggestions",
        "sequential_pattern",
        "matches",
        "async_functions",
        "form_submit_pattern",
        "fire_forget_pattern",
        "matches",
        "input_data",
        "command",
        "func_body",
        "content",
        "filename",
        "func_name"
      ],
      "type_aliases": []
    },
    "imported_by": []
  },
  ".claude.hooks.pre-tool-use.13-import-validator": {
    "file": ".claude/hooks/pre-tool-use/13-import-validator.py",
    "imports": {
      "imports": [
        "json",
        "sys",
        "re"
      ],
      "from_imports": [
        "pathlib.Path"
      ],
      "local_imports": [],
      "type_imports": []
    },
    "exports": {
      "classes": [],
      "functions": [
        "get_project_root",
        "get_relative_depth",
        "validate_imports",
        "check_import_issue",
        "main"
      ],
      "variables": [
        "current",
        "issues",
        "project_root",
        "import_pattern",
        "lines",
        "input_data",
        "tool_use",
        "file_path",
        "content",
        "issues",
        "current",
        "match",
        "levels_up",
        "current_depth",
        "resolved_path",
        "exists",
        "package_match",
        "path_parts",
        "error_msg",
        "import_prefix",
        "import_path",
        "import_suffix",
        "issue",
        "final_path",
        "path_parts",
        "package_name",
        "component_name",
        "exists",
        "fixed_path",
        "fixed_path",
        "fixed_path"
      ],
      "type_aliases": []
    },
    "imported_by": []
  },
  ".claude.hooks.pre-tool-use.05-code-quality": {
    "file": ".claude/hooks/pre-tool-use/05-code-quality.py",
    "imports": {
      "imports": [
        "json",
        "sys",
        "re"
      ],
      "from_imports": [
        "pathlib.Path"
      ],
      "local_imports": [],
      "type_imports": []
    },
    "exports": {
      "classes": [],
      "functions": [
        "check_code_quality",
        "calculate_complexity",
        "format_quality_report",
        "suggest_fixes",
        "main"
      ],
      "variables": [
        "issues",
        "todos",
        "try_without_catch",
        "complexity_indicators",
        "complexity",
        "report",
        "errors",
        "warnings",
        "info",
        "fixes",
        "input_data",
        "file_path",
        "content",
        "issues",
        "complexity",
        "report",
        "console_logs",
        "any_types",
        "has_interface",
        "has_export",
        "has_errors",
        "response",
        "fixes"
      ],
      "type_aliases": []
    },
    "imported_by": [
      "scripts.verify-all-systems",
      ".claude.scripts.health-check",
      ".claude.scripts.test-hooks-advanced"
    ]
  },
  ".claude.hooks.pre-tool-use.16-python-creation-guard": {
    "file": ".claude/hooks/pre-tool-use/16-python-creation-guard.py",
    "imports": {
      "imports": [
        "json",
        "sys",
        "os",
        "ast",
        "re",
        "difflib",
        "datetime"
      ],
      "from_imports": [
        "pathlib.Path",
        "typing.Dict",
        "typing.List",
        "typing.Optional",
        "typing.Set"
      ],
      "local_imports": [],
      "type_imports": []
    },
    "exports": {
      "classes": [],
      "functions": [
        "find_python_files",
        "extract_definitions",
        "find_similar_names",
        "check_exists",
        "find_imports",
        "format_alert_message",
        "main"
      ],
      "variables": [
        "python_files",
        "ignore_dirs",
        "definitions",
        "similar",
        "project_root",
        "python_files",
        "results",
        "all_definitions",
        "all_names",
        "similar",
        "imports",
        "project_root",
        "python_files",
        "import_patterns",
        "name",
        "match",
        "match_type",
        "locations",
        "msg",
        "first_file",
        "input_data",
        "file_path",
        "content",
        "creating",
        "class_matches",
        "func_matches",
        "alerts",
        "ratio",
        "defs",
        "search_types",
        "search_types",
        "stat",
        "modified",
        "module_path",
        "model_matches",
        "results",
        "full_message",
        "response",
        "tree",
        "content",
        "msg",
        "imports",
        "alert_msg",
        "content"
      ],
      "type_aliases": []
    },
    "imported_by": [
      ".claude.scripts.test-v240-hooks"
    ]
  },
  ".claude.hooks.pre-tool-use.09-auto-persona": {
    "file": ".claude/hooks/pre-tool-use/09-auto-persona.py",
    "imports": {
      "imports": [
        "json",
        "sys",
        "re"
      ],
      "from_imports": [
        "pathlib.Path"
      ],
      "local_imports": [],
      "type_imports": []
    },
    "exports": {
      "classes": [],
      "functions": [
        "detect_persona_from_file",
        "detect_persona_from_content",
        "suggest_persona_switch",
        "get_current_persona",
        "main"
      ],
      "variables": [
        "FILE_PATTERN_PERSONAS",
        "KEYWORD_PERSONAS",
        "content_lower",
        "persona_scores",
        "persona_descriptions",
        "message",
        "state_file",
        "input_data",
        "file_path",
        "content",
        "file_persona",
        "content_persona",
        "suggested_persona",
        "content_persona",
        "current_persona",
        "message",
        "reason",
        "reason",
        "data"
      ],
      "type_aliases": []
    },
    "imported_by": [
      "scripts.verify-all-systems"
    ]
  },
  ".claude.hooks.pre-tool-use.00-auto-approve-safe-ops": {
    "file": ".claude/hooks/pre-tool-use/00-auto-approve-safe-ops.py",
    "imports": {
      "imports": [
        "json",
        "sys",
        "os"
      ],
      "from_imports": [
        "pathlib.Path"
      ],
      "local_imports": [],
      "type_imports": []
    },
    "exports": {
      "classes": [],
      "functions": [
        "is_safe_write_path",
        "is_safe_shell_command",
        "should_auto_approve",
        "main"
      ],
      "variables": [
        "SAFE_READ_OPERATIONS",
        "SAFE_WRITE_DIRECTORIES",
        "SAFE_SHELL_COMMANDS",
        "path_str",
        "path_obj",
        "command_lower",
        "tool_name",
        "parameters",
        "path",
        "command",
        "hook_input",
        "tool_use",
        "tool_name"
      ],
      "type_aliases": []
    },
    "imported_by": []
  },
  ".claude.hooks.pre-tool-use.03-conflict-check": {
    "file": ".claude/hooks/pre-tool-use/03-conflict-check.py",
    "imports": {
      "imports": [
        "json",
        "sys",
        "subprocess"
      ],
      "from_imports": [
        "pathlib.Path",
        "datetime.datetime"
      ],
      "local_imports": [],
      "type_imports": []
    },
    "exports": {
      "classes": [],
      "functions": [
        "get_team_registry",
        "update_team_registry",
        "get_current_user",
        "check_file_locks",
        "calculate_time_ago",
        "register_file_activity",
        "is_stale_activity",
        "get_current_branch",
        "check_related_files",
        "main"
      ],
      "variables": [
        "registry_path",
        "registry_path",
        "config_path",
        "current_user",
        "active_work",
        "registry",
        "current_user",
        "user_work",
        "related_patterns",
        "warnings",
        "base_path",
        "input_data",
        "file_path",
        "registry",
        "lock_info",
        "related_warnings",
        "then",
        "now",
        "delta",
        "then",
        "now",
        "result",
        "message",
        "message",
        "active_files",
        "time_ago",
        "minutes",
        "related_file",
        "lock_info",
        "hours"
      ],
      "type_aliases": []
    },
    "imported_by": [
      "scripts.verify-all-systems",
      ".claude.scripts.health-check"
    ]
  },
  ".claude.hooks.pre-tool-use.06-biome-lint": {
    "file": ".claude/hooks/pre-tool-use/06-biome-lint.py",
    "imports": {
      "imports": [
        "json",
        "sys",
        "subprocess"
      ],
      "from_imports": [
        "pathlib.Path"
      ],
      "local_imports": [],
      "type_imports": []
    },
    "exports": {
      "classes": [],
      "functions": [
        "run_biome_check",
        "run_biome_format_check",
        "auto_fix_with_biome",
        "parse_biome_output",
        "should_check_file",
        "format_biome_report",
        "main"
      ],
      "variables": [
        "issues",
        "checkable_extensions",
        "ignore_paths",
        "path",
        "report",
        "input_data",
        "file_path",
        "content",
        "temp_path",
        "result",
        "result",
        "result",
        "lines",
        "issues",
        "check_result",
        "format_result",
        "fix_result",
        "fixed_content",
        "response",
        "response"
      ],
      "type_aliases": []
    },
    "imported_by": []
  },
  ".claude.hooks.pre-tool-use.10-hydration-guard": {
    "file": ".claude/hooks/pre-tool-use/10-hydration-guard.py",
    "imports": {
      "imports": [
        "json",
        "sys",
        "re"
      ],
      "from_imports": [
        "pathlib.Path"
      ],
      "local_imports": [],
      "type_imports": []
    },
    "exports": {
      "classes": [],
      "functions": [
        "is_react_component",
        "check_hydration_issues",
        "main"
      ],
      "variables": [
        "HYDRATION_VIOLATIONS",
        "COMPONENT_PATTERNS",
        "violations",
        "input_data",
        "tool_use",
        "file_path",
        "content",
        "violations",
        "matches",
        "error_msg",
        "line_num",
        "before_match",
        "after_match"
      ],
      "type_aliases": []
    },
    "imported_by": []
  },
  ".claude.hooks.pre-tool-use.01-dangerous-commands": {
    "file": ".claude/hooks/pre-tool-use/01-dangerous-commands.py",
    "imports": {
      "imports": [
        "json",
        "sys",
        "re"
      ],
      "from_imports": [
        "datetime.datetime",
        "pathlib.Path"
      ],
      "local_imports": [],
      "type_imports": []
    },
    "exports": {
      "classes": [],
      "functions": [
        "is_dangerous",
        "main"
      ],
      "variables": [
        "DANGEROUS_PATTERNS",
        "BLOCKED_TOOLS",
        "input_str",
        "input_data",
        "tool_name",
        "tool_input",
        "command",
        "log_dir",
        "blocked_log"
      ],
      "type_aliases": []
    },
    "imported_by": [
      "scripts.verify-all-systems"
    ]
  },
  ".claude.hooks.pre-tool-use.16-tcpa-compliance": {
    "file": ".claude/hooks/pre-tool-use/16-tcpa-compliance.py",
    "imports": {
      "imports": [
        "json",
        "sys",
        "os"
      ],
      "from_imports": [
        "pathlib.Path",
        "utils.hook_utils.HookResult",
        "utils.hook_utils.HookViolation"
      ],
      "local_imports": [],
      "type_imports": []
    },
    "exports": {
      "classes": [],
      "functions": [
        "load_tcpa_config",
        "is_lead_form_file",
        "check_tcpa_compliance",
        "main"
      ],
      "variables": [
        "form_indicators",
        "violations",
        "config",
        "has_email_field",
        "has_phone_field",
        "has_form_element",
        "consent_patterns",
        "has_consent",
        "config_path",
        "has_trustedform",
        "has_jornaya",
        "consent_language",
        "key_phrases",
        "has_proper_language",
        "tool_args",
        "command",
        "file_path",
        "violations",
        "proceed",
        "content",
        "content"
      ],
      "type_aliases": []
    },
    "imported_by": []
  },
  ".claude.hooks.pre-tool-use.12-deletion-guard": {
    "file": ".claude/hooks/pre-tool-use/12-deletion-guard.py",
    "imports": {
      "imports": [
        "json",
        "sys",
        "re"
      ],
      "from_imports": [
        "pathlib.Path"
      ],
      "local_imports": [],
      "type_imports": []
    },
    "exports": {
      "classes": [],
      "functions": [
        "count_removed_lines",
        "is_significant_deletion",
        "analyze_deletion",
        "get_current_task",
        "main"
      ],
      "variables": [
        "DELETION_PATTERNS",
        "PROTECTED_FILES",
        "PROTECTED_DIRS",
        "old_lines",
        "new_lines",
        "old_non_empty",
        "new_non_empty",
        "lines_removed",
        "old_lines",
        "new_lines",
        "removed_items",
        "input_data",
        "tool_use",
        "operation",
        "reduction_percent",
        "work_state_file",
        "file_path",
        "file_name",
        "current_task",
        "warning_msg",
        "old_content",
        "new_content",
        "file_path",
        "lines_removed",
        "removed_items",
        "current_task",
        "error_msg",
        "match",
        "match",
        "match",
        "state"
      ],
      "type_aliases": []
    },
    "imported_by": []
  },
  ".claude.hooks.stop.knowledge-share": {
    "file": ".claude/hooks/stop/knowledge-share.py",
    "imports": {
      "imports": [
        "json",
        "sys",
        "re"
      ],
      "from_imports": [
        "pathlib.Path",
        "datetime.datetime"
      ],
      "local_imports": [],
      "type_imports": []
    },
    "exports": {
      "classes": [],
      "functions": [
        "extract_patterns",
        "extract_component_patterns",
        "classify_component_type",
        "extract_props",
        "extract_patterns_used",
        "check_design_compliance",
        "extract_problem_solutions",
        "categorize_problem",
        "extract_useful_commands",
        "get_command_context",
        "extract_error_fixes",
        "update_knowledge_base",
        "get_current_user",
        "generate_learning_summary",
        "create_github_discussion",
        "main"
      ],
      "variables": [
        "patterns",
        "components",
        "props_match",
        "patterns",
        "violations",
        "solutions",
        "message_lower",
        "commands",
        "command_usage",
        "error_fixes",
        "kb_path",
        "config_path",
        "summary",
        "title",
        "body",
        "input_data",
        "chat_history",
        "patterns",
        "kb",
        "summary",
        "response",
        "props_content",
        "props",
        "message",
        "message",
        "key",
        "kb",
        "most_used",
        "path",
        "prop_match",
        "command_parts",
        "command",
        "args",
        "error_message",
        "kb",
        "content",
        "component",
        "next_entry",
        "next_message"
      ],
      "type_aliases": []
    },
    "imported_by": [
      ".claude.scripts.health-check"
    ]
  },
  ".claude.hooks.stop.handoff-prep": {
    "file": ".claude/hooks/stop/handoff-prep.py",
    "imports": {
      "imports": [
        "json",
        "sys",
        "subprocess",
        "re"
      ],
      "from_imports": [
        "pathlib.Path",
        "datetime.datetime"
      ],
      "local_imports": [],
      "type_imports": []
    },
    "exports": {
      "classes": [],
      "functions": [
        "analyze_session_for_handoff",
        "get_current_user",
        "extract_work_summary",
        "get_current_state",
        "extract_next_actions",
        "extract_blockers",
        "extract_decisions",
        "extract_code_context",
        "create_handoff_document",
        "save_handoff",
        "notify_team",
        "main"
      ],
      "variables": [
        "handoff",
        "config_path",
        "summary",
        "state",
        "actions",
        "state",
        "blockers",
        "decisions",
        "decision_keywords",
        "context",
        "doc",
        "timestamp",
        "handoff_dir",
        "handoff_file",
        "json_file",
        "latest_link",
        "notify_file",
        "notifications",
        "input_data",
        "chat_history",
        "handoff",
        "document",
        "handoff_file",
        "response",
        "branch_result",
        "status_result",
        "changes",
        "result",
        "message",
        "message",
        "notifications",
        "file_path",
        "resolved",
        "file_path",
        "notifications",
        "component",
        "status",
        "file_path",
        "parts",
        "content",
        "func_match",
        "resolved"
      ],
      "type_aliases": []
    },
    "imported_by": [
      ".claude.scripts.health-check"
    ]
  },
  ".claude.hooks.stop.01-save-transcript": {
    "file": ".claude/hooks/stop/01-save-transcript.py",
    "imports": {
      "imports": [
        "json",
        "sys"
      ],
      "from_imports": [
        "datetime.datetime",
        "pathlib.Path"
      ],
      "local_imports": [],
      "type_imports": []
    },
    "exports": {
      "classes": [],
      "functions": [
        "main"
      ],
      "variables": [
        "input_data",
        "transcript_dir",
        "transcript",
        "messages",
        "timestamp",
        "transcript_file",
        "transcript_data",
        "summary_file",
        "content",
        "content"
      ],
      "type_aliases": []
    },
    "imported_by": []
  },
  ".claude.hooks.stop.save-state": {
    "file": ".claude/hooks/stop/save-state.py",
    "imports": {
      "imports": [
        "json",
        "sys",
        "subprocess",
        "hashlib"
      ],
      "from_imports": [
        "pathlib.Path",
        "datetime.datetime"
      ],
      "local_imports": [],
      "type_imports": []
    },
    "exports": {
      "classes": [],
      "functions": [
        "get_session_summary",
        "calculate_session_duration",
        "extract_modified_files",
        "extract_created_components",
        "count_design_violations",
        "extract_commands_used",
        "estimate_progress",
        "create_final_state",
        "get_git_info",
        "get_current_user",
        "generate_next_steps",
        "generate_handoff_notes",
        "save_session_state",
        "update_daily_log",
        "format_session_report",
        "main"
      ],
      "variables": [
        "summary",
        "files",
        "components",
        "violations",
        "commands",
        "files_count",
        "git_info",
        "state",
        "config_path",
        "steps",
        "notes",
        "log_dir",
        "today",
        "log_file",
        "report",
        "input_data",
        "chat_history",
        "summary",
        "state",
        "saved",
        "report",
        "response",
        "message",
        "branch",
        "status_result",
        "uncommitted",
        "gist_content",
        "gist_name",
        "result",
        "daily_log",
        "path",
        "command",
        "daily_log",
        "component_name"
      ],
      "type_aliases": []
    },
    "imported_by": [
      ".claude.scripts.health-check"
    ]
  },
  ".claude.hooks.utils.debug-helper": {
    "file": ".claude/hooks/utils/debug-helper.py",
    "imports": {
      "imports": [
        "json",
        "sys",
        "subprocess",
        "traceback"
      ],
      "from_imports": [
        "pathlib.Path",
        "datetime.datetime"
      ],
      "local_imports": [],
      "type_imports": []
    },
    "exports": {
      "classes": [],
      "functions": [
        "get_system_info",
        "get_current_user",
        "diagnose_hook_failure",
        "create_debug_report",
        "save_debug_log",
        "main"
      ],
      "variables": [
        "info",
        "required_dirs",
        "diagnosis",
        "error_str",
        "report",
        "debug_dir",
        "timestamp",
        "debug_file",
        "result",
        "config_path",
        "input_data",
        "error_data",
        "report",
        "report",
        "debug_file"
      ],
      "type_aliases": []
    },
    "imported_by": []
  },
  ".claude.hooks.utils.performance": {
    "file": ".claude/hooks/utils/performance.py",
    "imports": {
      "imports": [
        "json",
        "time",
        "functools"
      ],
      "from_imports": [
        "pathlib.Path",
        "datetime.datetime"
      ],
      "local_imports": [],
      "type_imports": []
    },
    "exports": {
      "classes": [
        "HookPerformanceMonitor"
      ],
      "functions": [
        "monitor_performance",
        "get_performance_report",
        "load_metrics",
        "save_metrics",
        "record_execution",
        "log_slow_execution",
        "get_performance_summary",
        "decorator",
        "wrapper"
      ],
      "variables": [
        "monitor",
        "summary",
        "report",
        "slow_hooks",
        "hook_metrics",
        "slow_log",
        "summary",
        "monitor",
        "start_time",
        "result",
        "execution_time",
        "execution_time"
      ],
      "type_aliases": []
    },
    "imported_by": [
      "scripts.verify-all-systems",
      "src.orchestration.__init__",
      ".claude.hooks.pre-tool-use.08-evidence-language",
      ".claude.hooks.pre-tool-use.14-prd-clarity",
      ".claude.hooks.pre-tool-use.09-auto-persona",
      ".claude.hooks.post-tool-use.03-auto-orchestrate"
    ]
  },
  ".claude.hooks.post-tool-use.02-metrics": {
    "file": ".claude/hooks/post-tool-use/02-metrics.py",
    "imports": {
      "imports": [
        "json",
        "sys",
        "re"
      ],
      "from_imports": [
        "pathlib.Path",
        "datetime.datetime"
      ],
      "local_imports": [],
      "type_imports": []
    },
    "exports": {
      "classes": [],
      "functions": [
        "get_metrics_file",
        "load_metrics",
        "save_metrics",
        "analyze_component_file",
        "update_global_metrics",
        "generate_insights",
        "main"
      ],
      "variables": [
        "metrics_dir",
        "metrics_file",
        "analysis",
        "font_sizes",
        "forbidden_sizes",
        "font_weights",
        "forbidden_weights",
        "total_compliant",
        "insights",
        "problem_files",
        "input_data",
        "file_path",
        "content",
        "analysis",
        "metrics",
        "metrics",
        "vtype",
        "most_common",
        "insights",
        "message"
      ],
      "type_aliases": []
    },
    "imported_by": [
      "scripts.verify-all-systems",
      ".claude.scripts.health-check"
    ]
  },
  ".claude.hooks.post-tool-use.03-auto-orchestrate": {
    "file": ".claude/hooks/post-tool-use/03-auto-orchestrate.py",
    "imports": {
      "imports": [
        "json",
        "sys",
        "re"
      ],
      "from_imports": [
        "pathlib.Path",
        "collections.defaultdict"
      ],
      "local_imports": [],
      "type_imports": []
    },
    "exports": {
      "classes": [],
      "functions": [
        "analyze_task_domains",
        "determine_orchestration_strategy",
        "main"
      ],
      "variables": [
        "domains",
        "domain_patterns",
        "domain_strategy_map",
        "active_domains",
        "tool",
        "path",
        "content",
        "domains",
        "active_domains",
        "total_mentions",
        "orchestration_rules",
        "min_domains",
        "complexity_threshold",
        "matches",
        "input_data",
        "personas_path",
        "strategy",
        "feature_name",
        "message",
        "personas_config",
        "strategy_info"
      ],
      "type_aliases": []
    },
    "imported_by": []
  },
  ".claude.hooks.post-tool-use.01-action-logger": {
    "file": ".claude/hooks/post-tool-use/01-action-logger.py",
    "imports": {
      "imports": [
        "json",
        "sys"
      ],
      "from_imports": [
        "datetime.datetime",
        "pathlib.Path"
      ],
      "local_imports": [],
      "type_imports": []
    },
    "exports": {
      "classes": [],
      "functions": [
        "main"
      ],
      "variables": [
        "input_data",
        "log_dir",
        "today",
        "log_file",
        "log_entry"
      ],
      "type_aliases": []
    },
    "imported_by": []
  },
  ".claude.hooks.post-tool-use.04-research-capture": {
    "file": ".claude/hooks/post-tool-use/04-research-capture.py",
    "imports": {
      "imports": [
        "json",
        "os",
        "sys",
        "re",
        "hashlib",
        "subprocess",
        "traceback"
      ],
      "from_imports": [
        "pathlib.Path",
        "datetime.datetime"
      ],
      "local_imports": [],
      "type_imports": []
    },
    "exports": {
      "classes": [],
      "functions": [
        "get_current_feature",
        "find_existing_research",
        "merge_research_content",
        "update_research_index",
        "extract_sections"
      ],
      "variables": [
        "file_path",
        "skip_dirs",
        "research_base",
        "active_paths",
        "index_file",
        "existing_sections",
        "new_sections",
        "index_file",
        "doc_id",
        "existing_entry",
        "entry",
        "categories",
        "research_indicators",
        "title_match",
        "title",
        "content_lower",
        "is_research",
        "doc_type",
        "feature",
        "existing_doc",
        "branch",
        "sections",
        "current_section",
        "current_content",
        "merged",
        "index",
        "doc_type",
        "content",
        "doc_type",
        "merged_content",
        "metadata",
        "metadata",
        "pending_file",
        "pending",
        "parts",
        "feature",
        "index",
        "merged",
        "merged",
        "change_log",
        "changes",
        "index",
        "existing_entry",
        "doc_type",
        "existing_content",
        "current_section",
        "current_content",
        "merged",
        "merged",
        "doc_type",
        "pending",
        "content",
        "file_title",
        "doc_type"
      ],
      "type_aliases": []
    },
    "imported_by": []
  },
  ".claude.hooks.post-tool-use.03-pattern-learning": {
    "file": ".claude/hooks/post-tool-use/03-pattern-learning.py",
    "imports": {
      "imports": [
        "json",
        "os",
        "sys",
        "hashlib",
        "re",
        "traceback"
      ],
      "from_imports": [
        "datetime.datetime",
        "pathlib.Path"
      ],
      "local_imports": [],
      "type_imports": []
    },
    "exports": {
      "classes": [],
      "functions": [
        "ensure_dirs",
        "extract_prd_sections",
        "analyze_implementation",
        "create_pattern_entry",
        "save_pattern",
        "check_for_pattern_extraction",
        "check_recent_prd_work",
        "main"
      ],
      "variables": [
        "SPECS_DIR",
        "PATTERNS_DIR",
        "TEMPLATES_DIR",
        "sections",
        "patterns",
        "patterns",
        "pattern",
        "spec_text",
        "pattern_file",
        "index_file",
        "index_entry",
        "project_root",
        "prd_files",
        "recent_prd",
        "feature_name",
        "related_files",
        "search_patterns",
        "content",
        "match",
        "index",
        "path",
        "hook_input",
        "tool_use",
        "extraction_candidate",
        "content",
        "file_type",
        "index",
        "pattern",
        "pattern_file",
        "content"
      ],
      "type_aliases": []
    },
    "imported_by": [
      "scripts.verify-all-systems",
      ".claude.scripts.health-check"
    ]
  },
  ".claude.hooks.post-tool-use.03-command-logger": {
    "file": ".claude/hooks/post-tool-use/03-command-logger.py",
    "imports": {
      "imports": [
        "json",
        "sys",
        "os",
        "re"
      ],
      "from_imports": [
        "pathlib.Path",
        "datetime.datetime"
      ],
      "local_imports": [],
      "type_imports": []
    },
    "exports": {
      "classes": [],
      "functions": [
        "extract_command_info",
        "extract_changed_files",
        "calculate_duration",
        "update_command_stats",
        "main"
      ],
      "variables": [
        "tool_name",
        "parameters",
        "tool_name",
        "parameters",
        "changed_files",
        "duration_ms",
        "stats_file",
        "stats",
        "cmd_stats",
        "input_data",
        "tool_use",
        "cmd_info",
        "result",
        "status",
        "error",
        "log_entry",
        "log_dir",
        "today",
        "log_file",
        "command",
        "file_path",
        "result",
        "output",
        "file_patterns",
        "result",
        "duration_ms",
        "status",
        "error",
        "parts",
        "matches",
        "status",
        "stats",
        "stats"
      ],
      "type_aliases": []
    },
    "imported_by": []
  },
  ".claude.hooks.post-tool-use.05-python-import-updater": {
    "file": ".claude/hooks/post-tool-use/05-python-import-updater.py",
    "imports": {
      "imports": [
        "json",
        "sys",
        "os",
        "re",
        "difflib"
      ],
      "from_imports": [
        "pathlib.Path",
        "typing.Dict",
        "typing.List",
        "typing.Tuple",
        "typing.Optional",
        "datetime.datetime"
      ],
      "local_imports": [],
      "type_imports": []
    },
    "exports": {
      "classes": [],
      "functions": [
        "find_python_files",
        "detect_module_changes",
        "find_imports_to_update",
        "update_relative_imports",
        "format_update_message",
        "save_update_plan",
        "main"
      ],
      "variables": [
        "python_files",
        "ignore_dirs",
        "changes",
        "old_module",
        "new_module",
        "files_to_update",
        "python_files",
        "import_patterns",
        "updates",
        "old_depth",
        "new_depth",
        "msg",
        "update_dir",
        "timestamp",
        "plan_file",
        "plan",
        "input_data",
        "old_path",
        "new_path",
        "changes",
        "root_path",
        "files_to_update",
        "content",
        "lines_to_update",
        "content",
        "lines",
        "relative_updates",
        "plan_file",
        "message",
        "response",
        "relative_import",
        "indent",
        "dots",
        "current_level",
        "new_level",
        "new_level",
        "new_dots",
        "new_line",
        "new_line",
        "new_line"
      ],
      "type_aliases": []
    },
    "imported_by": []
  },
  ".claude.hooks.post-tool-use.04-python-response-capture": {
    "file": ".claude/hooks/post-tool-use/04-python-response-capture.py",
    "imports": {
      "imports": [
        "json",
        "sys",
        "os",
        "re",
        "hashlib",
        "subprocess"
      ],
      "from_imports": [
        "datetime.datetime",
        "pathlib.Path",
        "typing.Dict",
        "typing.List",
        "typing.Optional"
      ],
      "local_imports": [],
      "type_imports": []
    },
    "exports": {
      "classes": [],
      "functions": [
        "extract_python_components",
        "extract_sections",
        "extract_tasks",
        "should_capture",
        "save_capture",
        "get_current_context",
        "main"
      ],
      "variables": [
        "components",
        "class_pattern",
        "func_pattern",
        "endpoint_pattern",
        "import_patterns",
        "package_pattern",
        "sections",
        "section_patterns",
        "tasks",
        "numbered_pattern",
        "bullet_pattern",
        "checkbox_pattern",
        "valuable_keywords",
        "content_lower",
        "keyword_count",
        "captures_dir",
        "timestamp",
        "content_hash",
        "filename",
        "filepath",
        "index_file",
        "index_entry",
        "context",
        "context_file",
        "input_data",
        "content",
        "components",
        "sections",
        "context",
        "capture_data",
        "capture_id",
        "class_name",
        "base_classes",
        "func_name",
        "return_type",
        "matches",
        "task",
        "index",
        "result",
        "task_list",
        "task_list",
        "message",
        "module",
        "index",
        "start",
        "section_content",
        "state",
        "end",
        "next_section",
        "end"
      ],
      "type_aliases": []
    },
    "imported_by": [
      ".claude.scripts.test-v240-hooks"
    ]
  },
  ".claude.hooks.post-tool-use.01-state-save": {
    "file": ".claude/hooks/post-tool-use/01-state-save.py",
    "imports": {
      "imports": [
        "import json",
        "import sys",
        "import subprocess",
        "import os",
        "from datetime import datetime",
        "from pathlib import Path",
        "import hashlib"
      ],
      "from_imports": [],
      "local_imports": [],
      "type_imports": []
    },
    "exports": {
      "classes": [],
      "functions": [],
      "variables": [],
      "type_aliases": []
    },
    "imported_by": [
      "scripts.verify-all-systems",
      "scripts.test-workflow",
      ".claude.scripts.health-check",
      ".claude.hooks.pre-tool-use.15-implementation-guide"
    ]
  }
}